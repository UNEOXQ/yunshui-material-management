name: Integration Tests\n\non:\n  push:\n    branches: [ main, develop ]\n  pull_request:\n    branches: [ main, develop ]\n\njobs:\n  integration-tests:\n    runs-on: ubuntu-latest\n    \n    services:\n      postgres:\n        image: postgres:15\n        env:\n          POSTGRES_DB: yun_shui_materials_test\n          POSTGRES_USER: postgres\n          POSTGRES_PASSWORD: test_password\n        options: >\n          --health-cmd pg_isready\n          --health-interval 10s\n          --health-timeout 5s\n          --health-retries 5\n        ports:\n          - 5432:5432\n      \n      redis:\n        image: redis:7\n        options: >\n          --health-cmd \"redis-cli ping\"\n          --health-interval 10s\n          --health-timeout 5s\n          --health-retries 5\n        ports:\n          - 6379:6379\n\n    steps:\n    - name: Checkout code\n      uses: actions/checkout@v4\n\n    - name: Setup Node.js\n      uses: actions/setup-node@v4\n      with:\n        node-version: '18'\n        cache: 'npm'\n        cache-dependency-path: |\n          backend/package-lock.json\n          frontend/package-lock.json\n\n    - name: Install backend dependencies\n      run: |\n        cd backend\n        npm ci\n\n    - name: Install frontend dependencies\n      run: |\n        cd frontend\n        npm ci\n\n    - name: Setup test environment\n      run: |\n        cp .env.example .env\n        cp backend/.env.test backend/.env\n        cp frontend/.env.test frontend/.env\n\n    - name: Run database migrations\n      run: |\n        cd backend\n        npm run migrate:up\n      env:\n        NODE_ENV: test\n        DB_HOST: localhost\n        DB_PORT: 5432\n        DB_NAME: yun_shui_materials_test\n        DB_USER: postgres\n        DB_PASSWORD: test_password\n\n    - name: Run backend unit tests\n      run: |\n        cd backend\n        npm run test:unit\n      env:\n        NODE_ENV: test\n        DB_HOST: localhost\n        DB_PORT: 5432\n        DB_NAME: yun_shui_materials_test\n        DB_USER: postgres\n        DB_PASSWORD: test_password\n        REDIS_HOST: localhost\n        REDIS_PORT: 6379\n\n    - name: Run backend integration tests\n      run: |\n        cd backend\n        npm run test:integration\n      env:\n        NODE_ENV: test\n        DB_HOST: localhost\n        DB_PORT: 5432\n        DB_NAME: yun_shui_materials_test\n        DB_USER: postgres\n        DB_PASSWORD: test_password\n        REDIS_HOST: localhost\n        REDIS_PORT: 6379\n        JWT_SECRET: test_jwt_secret_key_at_least_32_characters_long\n        JWT_REFRESH_SECRET: test_refresh_secret_key_at_least_32_characters_long\n\n    - name: Build backend\n      run: |\n        cd backend\n        npm run build\n\n    - name: Start backend server\n      run: |\n        cd backend\n        npm start &\n        sleep 10\n      env:\n        NODE_ENV: test\n        DB_HOST: localhost\n        DB_PORT: 5432\n        DB_NAME: yun_shui_materials_test\n        DB_USER: postgres\n        DB_PASSWORD: test_password\n        REDIS_HOST: localhost\n        REDIS_PORT: 6379\n        JWT_SECRET: test_jwt_secret_key_at_least_32_characters_long\n        JWT_REFRESH_SECRET: test_refresh_secret_key_at_least_32_characters_long\n\n    - name: Run frontend tests\n      run: |\n        cd frontend\n        npm test\n      env:\n        VITE_API_URL: http://localhost:3001/api\n        VITE_WS_URL: http://localhost:3001\n\n    - name: Build frontend\n      run: |\n        cd frontend\n        npm run build\n      env:\n        VITE_API_URL: /api\n        VITE_WS_URL: \n\n    - name: Run E2E tests\n      run: |\n        cd backend\n        npm run test:e2e\n      env:\n        NODE_ENV: test\n        DB_HOST: localhost\n        DB_PORT: 5432\n        DB_NAME: yun_shui_materials_test\n        DB_USER: postgres\n        DB_PASSWORD: test_password\n        REDIS_HOST: localhost\n        REDIS_PORT: 6379\n        JWT_SECRET: test_jwt_secret_key_at_least_32_characters_long\n        JWT_REFRESH_SECRET: test_refresh_secret_key_at_least_32_characters_long\n\n    - name: Upload test coverage\n      uses: codecov/codecov-action@v3\n      with:\n        files: |\n          backend/coverage/lcov.info\n          backend/coverage-integration/lcov.info\n          frontend/coverage/lcov.info\n        fail_ci_if_error: false\n\n    - name: Upload test results\n      uses: actions/upload-artifact@v3\n      if: always()\n      with:\n        name: test-results\n        path: |\n          backend/coverage/\n          backend/coverage-integration/\n          frontend/coverage/\n          backend/test-results.xml\n          frontend/test-results.xml"